--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v71=0;local v72;while true do if (v71==(0 -0)) then v72=(v31/((5 -3)^(v32-(1 -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -(367 + 181 + 20)))) ;return v72-(v72%(928 -(214 + 713))) ;end end else local v73=(1 + (1 -0))^(v32-(1 + 0)) ;return (((v31%(v73 + v73))>=v73) and (878 -(282 + 595))) or (1637 -(1523 + (1179 -(68 + 997)))) ;end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34=0 -(0 -0) ;local v35;local v36;local v37;local v38;while true do if (v34==(0 -0)) then v35,v36,v37,v38=v1(v16,v19,v19 + (1273 -(226 + 1044)) );v19=v19 + ((13 + 4) -13) ;v34=118 -(32 + 85) ;end if (v34==(1 + 0)) then return (v38 * (16777396 -(67 + 113))) + (v37 * (14533 + (202710 -151707))) + (v36 * ((2165 -(802 + 150)) -(892 + 65))) + v35 ;end end end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v39=0 -0 ;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v39~=(0 + 0)) then else v40=1180 -(1123 + 57) ;v41=nil;v39=1 + 0 ;end if (v39==(257 -(163 + 91))) then v46=nil;v47=nil;v39=4;end if ((1932 -(1869 + 61))==v39) then v44=nil;v45=nil;v39=3;end if ((2 + 2)==v39) then while true do if (v40==2) then v45=nil;v46=nil;v40=3;end if (v40~=3) then else v47=nil;while true do local v99=0;while true do if (v99==(3 -2)) then if (v41==(4 -1)) then for v107=1 + 0 ,v24() do v43[v107-1 ]=v29();end return v45;end if (v41==1) then local v104=0 -0 ;while true do if (v104==(0 + 0)) then v45={v42,v43,nil,v44};v46=v24();v104=1851 -(1409 + 441) ;end if (v104~=1) then else v47={};v41=720 -(15 + 703) ;break;end end end break;end if (v99~=(0 + 0)) then else if (v41==0) then local v105=0;while true do if (v105==0) then v42={};v43={};v105=439 -(262 + 176) ;end if (v105==1) then v44={};v41=1722 -(345 + 1376) ;break;end end end if (v41==(690 -(198 + 490))) then local v106=0;while true do if (v106==1) then for v124=1,v24() do local v125=0;local v126;while true do if ((0 -0)==v125) then v126=v22();if (v21(v126,1,1)~=0) then else local v232=0 -0 ;local v233;local v234;local v235;while true do if ((1206 -(696 + 510))~=v232) then else local v242=0;while true do if (v242==(0 -0)) then v233=v21(v126,2,1265 -(1091 + 171) );v234=v21(v126,4,6);v242=1;end if (v242~=(1 + 0)) then else v232=1;break;end end end if (v232~=1) then else local v243=0 -0 ;while true do if (v243==1) then v232=6 -4 ;break;end if (v243~=0) then else local v251=0;while true do if (0==v251) then v235={v23(),v23(),nil,nil};if (v233==0) then local v253=0 + 0 ;local v254;local v255;while true do if (v253~=(837 -(660 + 176))) then else while true do if (v254==(0 + 0)) then v255=0;while true do if (v255~=(202 -(14 + 188))) then else v235[3]=v23();v235[679 -(534 + 141) ]=v23();break;end end break;end end break;end if (v253==0) then v254=0 + 0 ;v255=nil;v253=1 + 0 ;end end elseif (v233==(1 + 0)) then v235[3]=v24();elseif (v233==(3 -1)) then v235[3]=v24() -((2 -0)^(44 -28)) ;elseif (v233==3) then local v262=0 + 0 ;local v263;while true do if (v262==(0 + 0)) then v263=0;while true do if ((396 -(115 + 281))~=v263) then else v235[3]=v24() -(2^(37 -21)) ;v235[4]=v23();break;end end break;end end end v251=1 + 0 ;end if (v251==(2 -1)) then v243=3 -2 ;break;end end end end end if (v232~=(870 -(550 + 317))) then else if (v21(v234,3,3)==(1 -0)) then v235[4 -0 ]=v47[v235[4]];end v42[v124]=v235;break;end if (v232==(5 -3)) then local v245=0;local v246;while true do if ((285 -(134 + 151))~=v245) then else v246=1665 -(970 + 695) ;while true do if (v246~=(0 -0)) then else local v252=0;while true do if (v252==0) then if (v21(v234,1991 -(582 + 1408) ,1)==1) then v235[6 -4 ]=v47[v235[2]];end if (v21(v234,2 -0 ,2)~=(3 -2)) then else v235[3]=v47[v235[1827 -(1195 + 629) ]];end v252=1 -0 ;end if (v252==(242 -(187 + 54))) then v246=781 -(162 + 618) ;break;end end end if (v246~=(1 + 0)) then else v232=3;break;end end break;end end end end end break;end end end v41=3;break;end if (v106~=(0 + 0)) then else for v127=1,v46 do local v128=0;local v129;local v130;local v131;local v132;while true do if (v128==(1 -0)) then v131=nil;v132=nil;v128=2;end if ((0 -0)==v128) then v129=0 + 0 ;v130=nil;v128=1637 -(1373 + 263) ;end if ((1002 -(451 + 549))==v128) then while true do if (v129==0) then local v241=0 + 0 ;while true do if (v241~=(1 -0)) then else v129=1 -0 ;break;end if (v241==0) then v130=0;v131=nil;v241=1385 -(746 + 638) ;end end end if (v129==(1 + 0)) then v132=nil;while true do if ((0 -0)~=v130) then else local v247=341 -(218 + 123) ;while true do if (v247~=(1581 -(1535 + 46))) then else v131=v22();v132=nil;v247=1;end if (v247==(1 + 0)) then v130=1;break;end end end if (v130==1) then if (v131==(1 + 0)) then v132=v22()~=0 ;elseif (v131==2) then v132=v25();elseif (v131==(563 -(306 + 254))) then v132=v26();end v47[v127]=v132;break;end end break;end end break;end end end v45[3]=v22();v106=1;end end end v99=1 + 0 ;end end end break;end if (v40==(0 -0)) then local v97=1467 -(899 + 568) ;while true do if (v97~=1) then else v40=1;break;end if (v97==(0 + 0)) then v41=0 -0 ;v42=nil;v97=1;end end end if (v40~=(604 -(268 + 335))) then else local v98=0;while true do if (v98~=0) then else v43=nil;v44=nil;v98=291 -(60 + 230) ;end if (1==v98) then v40=574 -(426 + 146) ;break;end end end end break;end if (v39==(1 + 0)) then v42=nil;v43=nil;v39=1458 -(282 + 1174) ;end end end v30=nil;v18=7;end if (v18==4) then function v25()local v48=v24();local v49=v24();local v50=812 -(569 + 242) ;local v51=(v21(v49,2 -1 ,2 + 18 ) * ((1026 -(706 + 81 + 237))^32)) + v48 ;local v52=v21(v49,1272 -(721 + 530) ,1302 -(945 + 326) );local v53=((v21(v49,79 -47 )==(1 + 0)) and  -(530 -(406 + 123))) or ((2470 -(1749 + 20)) -(271 + 429)) ;if (v52==0) then if (v51==(0 + 0)) then return v53 * (1500 -(1408 + 92)) ;else local v78=0;while true do if ((1086 -(461 + 625))==v78) then v52=1289 -(993 + 71 + 224) ;v50=0;break;end end end elseif (v52==2047) then return ((v51==(0 + 0)) and (v53 * ((1172 -(418 + 753))/((1322 -(1249 + 73)) + 0 + 0)))) or (v53 * NaN) ;end return v8(v53,v52-((1251 -(466 + 679)) + 917) ) * (v50 + (v51/(2^(16 + 36)))) ;end v26=nil;function v26(v54)local v55;if  not v54 then v54=v24();if (v54==(0 -0)) then return "";end end v55=v3(v16,v19,(v19 + v54) -(2 -1) );v19=v19 + v54 ;local v56={};for v69=1901 -(106 + 1794) , #v55 do v56[v69]=v2(v1(v3(v55,v69,v69)));end return v6(v56);end v18=5;end if (v18==2) then function v22()local v57=v1(v16,v19,v19);v19=v19 + 1 ;return v57;end v23=nil;function v23()local v58=(687 -(17 + 86)) -(57 + 527) ;local v59;local v60;while true do if (v58==(1 + 0)) then return (v60 * (65 + 191)) + v59 ;end if (v58==0) then v59,v60=v1(v16,v19,v19 + ((4 + 1) -3) );v19=v19 + (5 -3) ;v58=115 -(4 + 110) ;end end end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v61)if (v1(v61,2)==79) then v20=v0(v3(v61,1,1));return "";else local v74=v2(v0(v61,16));if v20 then local v79=v5(v74,v20);v20=nil;return v79;else return v74;end end end);v18=1;end if (v18==7) then function v30(v62,v63,v64)local v65=0;local v66;local v67;local v68;while true do if (v65==1) then v68=v62[3];return function(...)local v80=v66;local v81=v67;local v82=v68;local v83=v28;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12("#",...) -1 ;local v89={};local v90={};for v94=0,v88 do if (v94>=v82) then v86[v94-v82 ]=v87[v94 + 1 ];else v90[v94]=v87[v94 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=26) then if (v93<=12) then if (v93<=5) then if (v93<=2) then if (v93<=0) then do return;end elseif (v93>1) then local v135=v92[2];v90[v135]=v90[v135](v90[v135 + 1 ]);elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=3) then local v110=0;local v111;while true do if (v110==0) then v111=v92[2];v90[v111](v13(v90,v111 + 1 ,v92[3]));break;end end elseif (v93>4) then v90[v92[2]]=v90[v92[3]];elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=8) then if (v93<=6) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==7) then v90[v92[2]]=v92[3];elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=10) then if (v93==9) then v90[v92[2]]={};else v90[v92[2]]={};end elseif (v93==11) then local v144=v92[2];v90[v144]=v90[v144](v13(v90,v144 + 1 ,v92[3]));else local v146=0;local v147;while true do if (v146==0) then v147=v92[2];v90[v147]=v90[v147](v13(v90,v147 + 1 ,v92[3]));break;end end end elseif (v93<=19) then if (v93<=15) then if (v93<=13) then v90[v92[2]]= not v90[v92[3]];elseif (v93==14) then v90[v92[2]]=v30(v81[v92[3]],nil,v64);elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=17) then if (v93==16) then v90[v92[2]]=v64[v92[3]];else local v151=v92[2];v90[v151](v13(v90,v151 + 1 ,v92[3]));end elseif (v93>18) then v90[v92[2]]=v92[3];else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=22) then if (v93<=20) then local v113=v92[2];local v114=v90[v92[3]];v90[v113 + 1 ]=v114;v90[v113]=v114[v92[4]];elseif (v93==21) then local v156=v92[2];local v157=v90[v156];for v210=v156 + 1 ,v92[3] do v7(v157,v90[v210]);end else v84=v92[3];end elseif (v93<=24) then if (v93>23) then local v159=0;local v160;while true do if (v159==0) then v160=v92[2];v90[v160](v90[v160 + 1 ]);break;end end else v90[v92[2]][v92[3]]=v92[4];end elseif (v93==25) then v90[v92[2]]=v30(v81[v92[3]],nil,v64);else v90[v92[2]]();end elseif (v93<=40) then if (v93<=33) then if (v93<=29) then if (v93<=27) then local v118=v92[2];v90[v118]=v90[v118](v13(v90,v118 + 1 ,v85));elseif (v93>28) then local v164=v92[2];v90[v164]=v90[v164]();else v90[v92[2]]=v92[3]~=0 ;end elseif (v93<=31) then if (v93==30) then v84=v92[3];else local v168=v92[2];local v169=v90[v168];local v170=v92[3];for v211=1,v170 do v169[v211]=v90[v168 + v211 ];end end elseif (v93==32) then local v171=0;local v172;local v173;local v174;local v175;while true do if (v171==2) then for v236=v172,v85 do v175=v175 + 1 ;v90[v236]=v173[v175];end break;end if (v171==0) then v172=v92[2];v173,v174=v83(v90[v172](v13(v90,v172 + 1 ,v92[3])));v171=1;end if (v171==1) then v85=(v174 + v172) -1 ;v175=0;v171=2;end end else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=36) then if (v93<=34) then v90[v92[2]]=v90[v92[3]];elseif (v93>35) then local v178=v92[2];local v179,v180=v83(v90[v178](v13(v90,v178 + 1 ,v92[3])));v85=(v180 + v178) -1 ;local v181=0;for v214=v178,v85 do local v215=0;while true do if (v215==0) then v181=v181 + 1 ;v90[v214]=v179[v181];break;end end end else local v182=v92[2];v90[v182]=v90[v182]();end elseif (v93<=38) then if (v93>37) then local v184=v92[2];local v185=v90[v184];local v186=v92[3];for v216=1,v186 do v185[v216]=v90[v184 + v216 ];end else v90[v92[2]]();end elseif (v93>39) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else do return;end end elseif (v93<=47) then if (v93<=43) then if (v93<=41) then for v133=v92[2],v92[3] do v90[v133]=nil;end elseif (v93>42) then v90[v92[2]]= not v90[v92[3]];else local v188=v92[2];local v189=v90[v92[3]];v90[v188 + 1 ]=v189;v90[v188]=v189[v92[4]];end elseif (v93<=45) then if (v93>44) then for v219=v92[2],v92[3] do v90[v219]=nil;end else v90[v92[2]][v92[3]]=v92[4];end elseif (v93>46) then v64[v92[3]]=v90[v92[2]];else local v197=0;local v198;while true do if (v197==0) then v198=v92[2];v90[v198]=v90[v198](v90[v198 + 1 ]);break;end end end elseif (v93<=50) then if (v93<=48) then v90[v92[2]]=v64[v92[3]];elseif (v93>49) then local v199=v92[2];v90[v199]=v90[v199](v13(v90,v199 + 1 ,v85));else v64[v92[3]]=v90[v92[2]];end elseif (v93<=52) then if (v93>51) then v90[v92[2]][v92[3]]=v90[v92[4]];else local v205=v92[2];v90[v205](v90[v205 + 1 ]);end elseif (v93==53) then v90[v92[2]]=v92[3]~=0 ;else v90[v92[2]][v92[3]]=v90[v92[4]];end v84=v84 + 1 ;end end;end if (0==v65) then v66=v62[1];v67=v62[2];v65=1;end end end return v30(v29(),{},v17)(...);end end end vv9(),...);
